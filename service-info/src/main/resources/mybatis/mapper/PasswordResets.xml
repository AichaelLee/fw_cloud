<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzz.mapper.PasswordResetsRepository">

<select id="findOneByToken" parameterType="com.lzz.entity.PasswordResets" resultType="com.lzz.entity.PasswordResets">
SELECT
  pw.user_id,
  pw.email,
  pw.token,
  pw.created
FROM password_resets pw
WHERE
pw.created >= cast(now() - interval '24 hours' as timestamp)
	<if test="token !=null">
	<if test="token !='' ">
		AND pw.token = #{token}
	</if>
	</if>
</select>

<delete id="deleteToken" parameterType="com.lzz.entity.PasswordResets">
	DELETE FROM
	password_resets
	<where>
		<if test="userId !=null">
			<if test="userId !='' ">
				user_id = #{userId}
			</if>
		</if>
		<if test="token !=null">
			<if test="token !='' ">
				token = #{token}
			</if>
		</if>
	</where>
</delete>

<insert id="insertToken" parameterType="com.lzz.entity.PasswordResets">
	INSERT INTO password_resets
	VALUES (
	#{userId}
	,#{email}
	,#{token}
	,NOW()
	)
</insert>

<select id="searchToken" parameterType="string">
	SELECT
	pw.user_id,
	pw.email,
	pw.token,
	pw.created
	FROM password_resets pw
	WHERE
	pw.created >= cast(now() - interval '24 hours' as timestamp)
	<if test="token !=null">
		<if test="token !='' ">
			AND pw.token = #{token}
		</if>
	</if>
</select>
<select id="searchUserByEmail" parameterType="string">
	SELECT
	T1.id
	FROM users T1
	WHERE email = #{email}
</select>
</mapper>
